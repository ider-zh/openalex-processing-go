// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.6.1
// source: proto/graph.proto

//包名，通过protoc生成时go文件时

package graphtool

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	DirectGraphDistanceService_DirectGraphDistance_FullMethodName = "/graphtool.DirectGraphDistanceService/DirectGraphDistance"
)

// DirectGraphDistanceServiceClient is the client API for DirectGraphDistanceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DirectGraphDistanceServiceClient interface {
	DirectGraphDistance(ctx context.Context, in *Graph, opts ...grpc.CallOption) (*GraphStats, error)
}

type directGraphDistanceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDirectGraphDistanceServiceClient(cc grpc.ClientConnInterface) DirectGraphDistanceServiceClient {
	return &directGraphDistanceServiceClient{cc}
}

func (c *directGraphDistanceServiceClient) DirectGraphDistance(ctx context.Context, in *Graph, opts ...grpc.CallOption) (*GraphStats, error) {
	out := new(GraphStats)
	err := c.cc.Invoke(ctx, DirectGraphDistanceService_DirectGraphDistance_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DirectGraphDistanceServiceServer is the server API for DirectGraphDistanceService service.
// All implementations must embed UnimplementedDirectGraphDistanceServiceServer
// for forward compatibility
type DirectGraphDistanceServiceServer interface {
	DirectGraphDistance(context.Context, *Graph) (*GraphStats, error)
	mustEmbedUnimplementedDirectGraphDistanceServiceServer()
}

// UnimplementedDirectGraphDistanceServiceServer must be embedded to have forward compatible implementations.
type UnimplementedDirectGraphDistanceServiceServer struct {
}

func (UnimplementedDirectGraphDistanceServiceServer) DirectGraphDistance(context.Context, *Graph) (*GraphStats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectGraphDistance not implemented")
}
func (UnimplementedDirectGraphDistanceServiceServer) mustEmbedUnimplementedDirectGraphDistanceServiceServer() {
}

// UnsafeDirectGraphDistanceServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DirectGraphDistanceServiceServer will
// result in compilation errors.
type UnsafeDirectGraphDistanceServiceServer interface {
	mustEmbedUnimplementedDirectGraphDistanceServiceServer()
}

func RegisterDirectGraphDistanceServiceServer(s grpc.ServiceRegistrar, srv DirectGraphDistanceServiceServer) {
	s.RegisterService(&DirectGraphDistanceService_ServiceDesc, srv)
}

func _DirectGraphDistanceService_DirectGraphDistance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Graph)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectGraphDistanceServiceServer).DirectGraphDistance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DirectGraphDistanceService_DirectGraphDistance_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectGraphDistanceServiceServer).DirectGraphDistance(ctx, req.(*Graph))
	}
	return interceptor(ctx, in, info, handler)
}

// DirectGraphDistanceService_ServiceDesc is the grpc.ServiceDesc for DirectGraphDistanceService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DirectGraphDistanceService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "graphtool.DirectGraphDistanceService",
	HandlerType: (*DirectGraphDistanceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DirectGraphDistance",
			Handler:    _DirectGraphDistanceService_DirectGraphDistance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/graph.proto",
}
